(clear)
(reset)

(defglobal ?*q* = 1)
(defglobal ?*T* = 24)

/* BAZA DE DATE ANIMALE: 
	om
	caine	
	cameleon
	flamingo
	tucan
	tipar
	pisica
	tigru
	somon
	somn
	jaguar
	cangur
	meduza
	maimuta
	panda
	pisica de mare
	sarpe
	rata
	vaca
 	pudel
	zebra
	porc
	fluture
	albina
	delfin
	papagal
	tarantula
	veverita
	melc
*/

(do-backward-chaining mam)       
(do-backward-chaining threetall) 
(do-backward-chaining fourlegs)  
(do-backward-chaining fur)       
(do-backward-chaining egg)       
(do-backward-chaining dom)       
(do-backward-chaining flies)     
(do-backward-chaining rep)  
(do-backward-chaining stripes)      
(do-backward-chaining fish)      
(do-backward-chaining mars)     
(do-backward-chaining ins)      
(do-backward-chaining legs)      
(do-backward-chaining land)      
(do-backward-chaining tail)      
(do-backward-chaining vert)      
(do-backward-chaining bilat)     
(do-backward-chaining spotted)   
(do-backward-chaining carnivore) 
(do-backward-chaining venomous)  
(do-backward-chaining horns)     
(do-backward-chaining shell)      
(do-backward-chaining whiskers)  
(do-backward-chaining slithers)  


(deffunction animals ()
   (printout t "Alege un animal din baza de date." crlf)
   (printout t "Orice cuvant ce incepe cu 'd' va fi interpretat ca si 'DA'" crlf)
   (printout t "Orice cuvant ce incepe cu 'n' va fi interpretat ca si 'NU'" crlf)
   (printout t "Apasati ENTER dupa fiecare raspuns." crlf)
   (run)
   (return)
)


(deffunction ask (?question)
   (printout t ?question) 
   (return (read))        
)


(deffunction validatedAsk (?question)
   (printout t ?*q*) 
   (printout t ". ") 
   (bind ?answer (ask ?question))
   (bind ?result (check ?answer))
   (while (= ?result nil) do
      (printout t "Comanda invalida! Va rugam incercati din nou." crlf)
      (bind ?answer (ask ?question))
      (bind ?result (check ?answer))
   )
	(bind ?*q* (+ 1 ?*q*))
    (if (> ?*q* ?*T*) then
      (exceedThreshold)
   )
   (return ?result)
)


(deffunction check (?in)
   (if (symbolp ?in) then
      (if (or (= "d" (sub-string 1 1 ?in)) (= "D" (sub-string 1 1 ?in))) then
         (bind ?in yes)
      elif (or (= "n" (sub-string 1 1 ?in)) (= "N" (sub-string 1 1 ?in))) then
         (bind ?in no)
      else
         (bind ?in nil)
      )
   else
      (bind ?in nil)
   )
   (return ?in)
)

(defrule noneFound "Programul se termina daca nu a fost identificat animalul dorit"
   (declare (salience -100))
   (not (done))
   =>
   (printout t "GAME OVER" crlf)
   (printout t "NU am gasit niciun animal in baza de date." crlf)
)

(deffunction exceedThreshold ()
   (halt)
   (printout t "GAME OVER" crlf)
   (printout t ?*T*)
   (printout t " Intrebarea a fost deja pusa." crlf)
   (return)
)

(defrule om 
   (mam yes)
   (threetall yes)
   (fourlegs no)
   (fur no)
   (egg no)
   (dom no)
   (flies no)
   (rep no)
   (fish no)
   (mars no)
   (ins no)
   (legs yes)
   (land yes)
   (tail no)
   (stripes no)
   (vert yes)
   (bilat yes)
   (spotted no)
   (carnivore no)
   (venomous no)
   (horns no)
   (shell no)
   (whiskers no)
   (slithers no)
   =>
   (printout t "Cred ca te-ai gandit la un om." crlf)
   (assert (done))
)
(defrule caine 
   (mam yes)
   (threetall no)
   (fourlegs yes)
   (fur yes)
   (egg no)
   (dom yes)
   (flies no)
   (rep no)
   (fish no)
   (mars no)
   (ins no)
   (legs yes)
   (land yes)
   (stripes no)
   (tail yes)
   (vert yes)
   (bilat yes)
   (spotted no)
   (carnivore yes)
   (venomous no)
   (horns no)
   (shell no)
   (whiskers no)
   (slithers no)
   =>
   (printout t "Cred ca animalul la care te-ai gandit este un caine." crlf)
   (assert (done))
)


(defrule cameleon 
   (mam no)
   (threetall no)
   (fourlegs yes)
   (fur no)
   (egg yes)
   (dom no) 
   (stripes no) 
   (flies no)
   (rep yes)
   (fish no)
   (mars no)
   (ins no)
   (legs yes)
   (land yes)
   (tail yes)
   (vert yes)
   (bilat yes)
   (spotted no)
   (carnivore no)
   (venomous no)
   (horns yes)
   (shell no)
   (whiskers no)
   (slithers no)
   =>
   (printout t "Cred ca animalul la care te-ai gandit este un cameleon." crlf)
   (assert (done))
)

(defrule flamingo 
   (mam no)
   (threetall yes)
   (fourlegs no)
   (fur no)
   (egg yes)
   (dom no)
   (flies yes)
   (rep no)
   (fish no)
   (stripes no) 
   (mars no)
   (ins no)
   (legs yes)
   (land no)  
   (tail yes) 
   (vert yes)
   (bilat yes)
   (spotted no)
   (carnivore no)
   (venomous no)
   (horns no)
   (shell no)
   (whiskers no)
   (slithers no)
   =>
   (printout t "Cred ca animalul la care te-ai gandit este un flamingo ." crlf)
   (assert (done))
)

(defrule tucan 
   (mam no)
   (threetall no) 
   (fourlegs no)
   (fur no)
   (egg yes)
   (dom no)
   (flies yes)
   (rep no)
   (fish no)
   (stripes no)
   (mars no)
   (ins no)
   (legs yes)
   (land yes)
   (tail yes)
   (vert yes)
   (bilat yes)
   (spotted no)
   (carnivore no)
   (venomous no)
   (horns no)
   (shell no)
   (whiskers no)
   (slithers no)
   =>
   (printout t "Cred ca animalul la care te-ai gandit este un tucan." crlf)
   (assert (done))
)

(defrule tipar 
   (mam no)
   (threetall no) 
   (fourlegs no)
   (fur no)
   (egg no)
   (dom no)
   (stripes no) 
   (flies no)
   (rep no)
   (fish no)
   (mars no)
   (ins no)
   (legs no)
   (land no)
   (tail no)
   (vert yes)
   (bilat yes)
   (spotted no)
   (carnivore yes)
   (venomous no)
   (horns no)
   (shell no)
   (whiskers no)
   (slithers yes)
   =>
   (printout t "Cred ca animalul la care te-ai gandit este un tipar." crlf)
   (assert (done))
)

(defrule pisica 
   (mam yes)
   (threetall no)
   (fourlegs yes)
   (fur yes)
   (egg no)
   (dom yes)
   (flies no)
   (stripes yes) 
   (rep no)
   (fish no)
   (mars no)
   (ins no)
   (legs yes)
   (land yes)
   (tail yes)
   (vert yes)
   (bilat yes)
   (spotted yes)
   (carnivore yes)
   (venomous no)
   (horns no)
   (shell no)
   (whiskers yes)
   (slithers no)
   =>
   (printout t "Cred ca animalul la care te-ai gandit este o pisica." crlf)
   (assert (done))
)

(defrule tigru 
   (mam yes)
   (threetall yes)
   (fourlegs yes)
   (fur yes)
   (egg no)
   (dom no)
   (flies no)
   (stripes yes) 
   (rep no)
   (fish no)
   (mars no)
   (ins no)
   (legs yes)
   (land yes)
   (tail yes)
   (vert yes)
   (bilat yes)
   (spotted no)
   (carnivore yes)
   (venomous no)
   (horns no)
   (shell no)
   (whiskers yes)
   (slithers no)
   =>
   (printout t "Cred ca animalul la care te-ai gandit este un tigru." crlf)
   (assert (done))
)

(defrule somon 
   (mam no)
   (threetall no)
   (fourlegs no)
   (fur no)
   (egg yes)
   (dom no)
   (flies no)
   (rep no)
   (fish yes)
   (stripes no) 
   (mars no)
   (ins no)
   (legs no)
   (land no)
   (tail yes)
   (vert yes)
   (bilat yes)
   (spotted no)
   (carnivore no)
   (venomous no)
   (horns no)
   (shell no)
   (whiskers no)
   (slithers no)
   =>
   (printout t "Cred ca animalul la care te-ai gandit este un somon." crlf)
   (assert (done))
)

(defrule somn 
   (mam no)
   (threetall yes)
   (fourlegs no)
   (fur no)
   (egg yes)
   (dom no)
   (flies no)
   (rep no)
   (fish yes)
   (stripes no) 
   (mars no)
   (ins no)
   (legs no)
   (land no)
   (tail yes)
   (vert yes)
   (bilat yes)
   (spotted no)
   (carnivore no)
   (venomous no)
   (horns no)
   (shell no)
   (whiskers yes)
   (slithers no)
   =>
   (printout t "Cred ca animalul la care te-ai gandit este un somn." crlf)
   (assert (done))
)

(defrule jaguar 
   (mam yes)
   (threetall yes)
   (fourlegs yes)
   (fur yes)
   (egg no)
   (stripes no) 
   (dom no)
   (flies no)
   (rep no)
   (fish no)
   (mars no)
   (ins no)
   (legs yes)
   (land yes)
   (tail yes)
   (vert yes)
   (bilat yes)
   (spotted yes)
   (carnivore yes)
   (venomous no)
   (horns no)
   (shell no)
   (whiskers yes)
   (slithers no)
   =>
   (printout t "Cred ca animalul la care te-ai gandit este un jaguar." crlf)
   (assert (done))
)

(defrule cangur 
   (mam yes)
   (threetall yes)
   (fourlegs no)
   (fur yes)
   (egg no)
   (dom no)
   (flies no)
   (stripes no) 
   (rep no)
   (fish no)
   (mars yes)
   (ins no)
   (legs yes)
   (land yes)
   (tail yes)
   (vert yes)
   (bilat yes)
   (spotted no)
   (carnivore no)
   (venomous no)
   (horns no)
   (shell no)
   (whiskers no)
   (slithers no)
   =>
   (printout t "Cred ca animalul la care te-ai gandit este un cangur." crlf)
   (assert (done))
)

(defrule meduza 
   (mam no)
   (threetall no)
   (fourlegs no)
   (fur no)
   (egg no)
   (dom no)
   (stripes no) 
   (flies no)
   (rep no)
   (fish no) 
   (mars no)
   (ins no)
   (legs no)
   (land no)
   (tail no)
   (vert no)
   (bilat no)
   (spotted no)
   (carnivore yes)
   (venomous yes)
   (horns no)
   (shell no)
   (whiskers no)
   (slithers no)
   =>
   (printout t "Cred ca animalul la care te-ai gandit este o meduza ." crlf)
   (assert (done))
)

(defrule maimuta 
   (mam yes)
   (threetall no) 
   (fourlegs no)  
   (fur yes)
   (egg no)
   (dom no)
   (flies no)
   (rep no)
   (stripes no) 
   (fish no)
   (mars no)
   (ins no)
   (legs yes)
   (land yes)
   (tail yes)
   (vert yes)
   (bilat yes)
   (spotted no)
   (carnivore no)
   (venomous no)
   (horns no)
   (shell no)
   (whiskers no)
   (slithers no)
   =>
   (printout t "Cred ca animalul la care te-ai gandit este o maimuta ." crlf)
   (assert (done))
)

(defrule panda 
   (mam yes)
   (threetall yes)
   (fourlegs yes) 
   (fur yes)
   (egg no)
   (dom no)
   (stripes no) 
   (flies no)
   (rep no)
   (fish no)
   (mars no)
   (ins no)
   (legs yes)
   (land yes)
   (tail yes)
   (vert yes)
   (bilat yes)
   (spotted yes)
   (carnivore no)
   (venomous no)
   (horns no)
   (shell no)
   (whiskers no)
   (slithers no)
   =>
   (printout t "Cred ca animalul la care te-ai gandit este un urs panda." crlf)
   (assert (done))
)

(defrule pismare 
   (mam no)
   (threetall yes)
   (fourlegs no)
   (fur no)
   (egg no)
   (dom no)
   (stripes no) 
   (flies no)
   (rep no)
   (fish no) 
   (mars no)
   (ins no)
   (legs no)
   (land no)
   (tail yes)
   (vert yes)
   (bilat yes)
   (spotted no)
   (carnivore yes)
   (venomous yes)
   (horns no)
   (shell no)
   (whiskers no)
   (slithers no)
   =>
   (printout t "Cred ca animalul la care te-ai gandit este o pisica de mare." crlf)
   (assert (done))
)

(defrule sarpe 
   (mam no)
   (threetall no)
   (fourlegs no)
   (fur no)
   (egg yes)
   (dom no)
   (flies no)
   (rep yes)
   (fish no)
   (mars no)
   (stripes no) 
   (ins no)
   (legs no)
   (land yes)
   (tail yes)
   (vert yes)
   (bilat yes)
   (spotted no)
   (carnivore yes)
   (venomous yes)
   (horns no)
   (shell no)
   (whiskers no)
   (slithers yes)
   =>
   (printout t "Cred ca animalul la care te-ai gandit este un sarpe." crlf)
   (assert (done))
)

(defrule rata 
   (mam no)
   (threetall no)
   (fourlegs no)
   (fur yes)
   (egg yes)
   (dom yes)
   (flies yes)
   (rep no)
   (fish no)
   (mars no)
   (stripes no) 
   (ins no)
   (legs yes)
   (land no)
   (tail yes)
   (vert yes)
   (bilat yes)
   (spotted no)
   (carnivore no)
   (venomous no)
   (horns no)
   (shell no)
   (whiskers no)
   (slithers no)
   =>
   (printout t "Cred ca animalul la care te-ai gandit este o rata." crlf)
   (assert (done))
)

(defrule vaca 
   (mam yes)
   (threetall yes)
   (fourlegs yes)
   (fur no)
   (egg no)
   (dom yes)
   (stripes no) 
   (flies no)
   (rep no)
   (fish no)
   (mars no)
   (ins no)
   (legs yes)
   (land yes)
   (tail yes)
   (vert yes)
   (bilat yes)
   (spotted no)
   (carnivore no)
   (venomous no)
   (horns no)
   (shell no)
   (whiskers yes) 
   (slithers no)
   =>
   (printout t "Cred ca animalul la care te-ai gandit este o Vaca ." crlf)
   (assert (done))
)

(defrule pudel 
   (mam yes)
   (threetall no)
   (fourlegs yes)
   (fur yes)
   (egg no)
   (dom yes)
   (flies no)
   (stripes no) 
   (rep no)
   (fish no)
   (mars no)
   (ins no)
   (legs yes)
   (land yes)
   (tail yes)
   (vert yes)
   (bilat yes)
   (spotted no)
   (carnivore no) 
   (venomous no)
   (horns no)
   (shell no)
   (whiskers no) 
   (slithers no)
   =>
   (printout t "Cred ca animalul la care te-ai gandit este un pudel." crlf)
   (assert (done))
)

(defrule zebra 
   (mam yes)
   (threetall yes)
   (fourlegs yes)
   (fur no)
   (egg no)
   (dom no)
   (flies no)
   (rep no)
   (fish no)
   (mars no)
   (ins no)
   (stripes yes) 
   (legs yes)
   (land yes)
   (tail yes)
   (vert yes)
   (bilat yes)
   (spotted no)
   (carnivore no)
   (venomous no)
   (horns no)
   (shell no)
   (whiskers no)
   (slithers no)
   =>
   (printout t "Cred ca animalul la care te-ai gandit este o zebra." crlf)
   (assert (done))
)

(defrule porc 
   (mam yes)
   (threetall yes)
   (fourlegs yes)
   (fur yes)
   (egg no)
   (dom yes)
   (flies no)
   (rep no)
   (fish no)
   (mars no)
   (ins no)
   (stripes no) 
   (legs yes)
   (land yes)
   (tail yes)
   (vert yes)
   (bilat yes)
   (spotted no)
   (carnivore yes)
   (venomous no)
   (horns no)
   (shell no)
   (whiskers no)
   (slithers no)
   =>
   (printout t "Cred ca animalul la care te-ai gandit este un porc." crlf)
   (assert (done))
)

(defrule fluture 
   (mam no)
   (threetall no)
   (fourlegs no)
   (fur no)
   (egg yes)
   (dom no)
   (flies yes)
   (rep no)
   (fish no)
   (mars no)
   (ins yes)
   (stripes no) 
   (legs yes)
   (land yes)
   (tail no)
   (vert no)
   (bilat yes)
   (spotted no)
   (carnivore no)
   (venomous no)
   (horns no)
   (shell no)
   (whiskers no)
   (slithers no)
   =>
   (printout t "Cred ca animalul la care te-ai gandit este un fluture." crlf)
   (assert (done))
)

(defrule albina
   (mam no)
   (threetall no)
   (fourlegs no)
   (fur no)
   (egg yes)
   (dom no)
   (flies yes)
   (rep no)
   (fish no)
   (mars no)
   (stripes yes) 
   (ins yes)
   (legs yes)
   (land yes)
   (tail no)
   (vert no)
   (bilat yes)
   (spotted no)
   (carnivore no)
   (venomous yes)
   (horns no)
   (shell no)
   (whiskers no)
   (slithers no)
   =>
   (printout t "Cred ca animalul la care te-ai gandit este o albina." crlf)
   (assert (done))
)

(defrule delfin 
   (mam yes)
   (threetall yes)
   (fourlegs no)
   (fur no)
   (egg no)
   (stripes no) 
   (dom no)
   (flies no)
   (rep no)
   (fish no) 
   (mars no)
   (ins no)
   (legs no)
   (land no)
   (tail yes)
   (vert yes)
   (bilat yes)
   (spotted no)
   (carnivore yes)
   (venomous no)
   (horns no)
   (shell no)
   (whiskers no)
   (slithers no)
   =>
   (printout t "Cred ca animalul la care te-ai gandit este un delfin." crlf)
   (assert (done))
)

(defrule papagal 
   (mam no)
   (threetall no)
   (fourlegs no)
   (fur no)
   (egg yes)
   (dom yes)
   (flies yes)
   (rep no)
   (fish no)
   (stripes no) 
   (mars no)
   (ins no)
   (legs yes)
   (land yes)
   (tail yes)
   (vert yes)
   (bilat yes)
   (spotted no)
   (carnivore no)
   (venomous no)
   (horns no)
   (shell no)
   (whiskers no)
   (slithers no)
   =>
   (printout t "Cred ca animalul la care te-ai gandit este un papagal." crlf)
   (assert (done))
)

(defrule tarantula 
   (mam no)
   (threetall no)
   (fourlegs no)
   (fur yes)
   (egg yes)
   (dom yes)
   (flies no)
   (rep no)
   (fish no)
   (stripes no) 
   (mars no)
   (ins no)
   (legs yes)
   (land yes)
   (tail no)
   (vert no)
   (bilat yes)
   (spotted no)
   (carnivore yes)
   (venomous yes)
   (horns no)
   (shell no)
   (whiskers on)
   (slithers no)
   =>
   (printout t "Cred ca animalul la care te-ai gandit este un tarantula." crlf)
   (assert (done))
)

(defrule veverita 
   (mam yes)
   (threetall no)
   (fourlegs yes)
   (fur yes)
   (stripes no) 
   (egg no)
   (dom no)
   (flies no)
   (rep no)
   (fish no)
   (mars no)
   (ins no)
   (legs yes)
   (land yes)
   (tail yes)
   (vert yes)
   (bilat yes)
   (spotted no)
   (carnivore no)
   (venomous no)
   (horns no)
   (shell no)
   (whiskers yes)
   (slithers no)
   =>
   (printout t "Cred ca animalul la care te-ai gandit este o veverita." crlf)
   (assert (done))
)

(defrule melc
   (mam no)
   (threetall no)
   (fourlegs no)
   (fur no)
   (egg yes)
   (dom no)
   (flies no)
   (stripes no) 
   (rep no)
   (fish no)
   (mars no)
   (ins no)
   (legs yes) 
   (land yes)
   (tail no)
   (vert no)
   (bilat no) 
   (spotted no)
   (carnivore no)
   (venomous no)
   (horns no)
   (shell yes)
   (whiskers no)
   (slithers no)
   =>
   (printout t "Cred ca animalul la care te-ai gandit este un melc ." crlf)
   (assert (done))
)

(defrule need-mam-rule 
   (need-mam ?) 
   =>
   (bind ?a (validatedAsk "Este un mamifer? "))
   (if (= ?a yes) then
      (assert (rep no))    
      (assert (fish no))   
      (assert (ins no))    
      (assert (vert yes))  
      (assert (bilat yes)) 
   )
   (if (= ?a no) then
      (assert (mars no))
   )
   (assert (mam ?a))
)

(defrule need-threetall-rule 
   (need-threetall ?) 
   =>
   (bind ?a (validatedAsk "Este mai inalt/lung de 1 metru in general?"))
   (if (= ?a yes) then
      (assert (ins no)) 
   )
   (assert (threetall ?a)) 
)

(defrule need-fourlegs-rule 
   (need-fourlegs ?) 
   =>
   (bind ?a (validatedAsk "Are patru picioare?"))
   (if (= ?a yes) then
      (assert (legs yes))
   )
   (assert (fourlegs ?a))
)

(defrule need-fur-rule 
   (need-fur ?) 
   =>
   (bind ?a (validatedAsk "Are blana?"))
      (if (= ?a yes) then
      (assert (rep no))  
      (assert (fish no)) 
   )
   (assert (fur ?a)) 
)

(defrule need-stripes-rule 
   (need-stripes ?) 
   =>
   (assert (stripes (validatedAsk "Are dungi?")))
)

(defrule need-egg-rule 
   (need-egg ?) 
   =>
   (assert (egg (validatedAsk "Depune oua?")))
)

(defrule need-dom-rule 
   (need-dom ?)
   =>
   (assert (dom (validatedAsk "Este de obicei domesticit? ")))
)

(defrule need-flies-rule 
   (need-flies ?) 
   =>
   (bind ?a (validatedAsk "Zboara?"))
   (if (= ?a yes) then
      (assert (fish no))
      (assert (mars no))
   )
   (assert (flies ?a))
)

(defrule need-rep-rule 
   (need-rep ?)
   =>
   (bind ?a (validatedAsk "Este o reptila? "))
   (if (= ?a yes) then
      (assert (mam no))   
      (assert (fur no))   
      (assert (flies no)) 
      (assert (fish no))  
      (assert (mars no))  
      (assert (ins no))   
      (assert (vert yes)) 
      (assert (tail yes)) 
   )
   (assert (rep ?a)) 
)

(defrule need-fish-rule 
   (need-fish ?) 
   =>
   (bind ?a (validatedAsk "Este un peste?"))
   (if (= ?a yes) then
      (assert (mam no))    
      (assert (fur no))    
      (assert (rep no))   
      (assert (mars no))  
      (assert (ins no))   
      (assert (land no))  
      (assert (tail yes)) 
      (assert (vert yes))  
      (assert (bilat yes)) 
   )
   (assert (fish ?a)) 
)

(defrule need-mars-rule 
   (need-mars ?) 
   =>
  
   (bind ?a (validatedAsk "Este un marsupial? "))
 
   (if (= ?a yes) then
      (assert (mam yes))   
      (assert (egg no))    
      (assert (flies no)) 
      (assert (rep no))    
      (assert (fish no))   
      (assert (ins no))    
      (assert (legs yes))
      (assert (vert yes))
      (assert (bilat yes)) 
   )
   (assert (mars ?a)) 
)

(defrule need-ins-rule 
   (need-ins ?)
   =>
   (bind ?a (validatedAsk "Este o insecta? "))
   (if (= ?a yes) then
      (assert (mam no))       
      (assert (threetall no)) 
      (assert (fourlegs no))  
      (assert (fur no))       
      (assert (rep no))       
      (assert (fish no))      
      (assert (mars no))      
      (assert (legs yes))     
      (assert (vert no))      
      (assert (bilat yes))    
   )
   (assert (ins ?a)) 
)

(defrule need-legs-rule 
   (need-legs ?) 
   =>
   (bind ?a (validatedAsk "Are picioare?"))
   (if (= ?a no) then
      (assert (fourlegs no))
   )
   (assert (legs ?a)) 
)

(defrule need-land-rule 
   (need-land ?) 
   =>
   (bind ?a (validatedAsk "Traieste pe uscat?"))
   (if (= ?a yes) then
      (assert (fish no))
   )
   (assert (land ?a))
)

(defrule need-tail-rule 
   (need-tail ?) 
   =>
   (assert (tail (validatedAsk "Are coada?")))
)

(defrule need-vert-rule 
   (need-vert ?) 
   =>
   (bind ?a (validatedAsk "Este o vertebrata?"))
   (if (= ?a yes) then
      (assert (bilat yes)) 
   )
   (assert (vert ?a)) 
)

(defrule need-bilat-rule 
   (need-bilat ?) 
   =>
   (assert (bilat (validatedAsk "Are simetrie bilaterala?")))
)

(defrule need-spotted-rule 
   (need-spotted ?) 
   =>
   (assert (spotted (validatedAsk "Are pete?")))
)

(defrule need-carnivore-rule 
   (need-carnivore ?) 
   =>
   (assert (carnivore (validatedAsk "Este carnivor?")))
)

(defrule need-venomous-rule 
   (need-venomous ?) 
   =>
   (assert (venomous (validatedAsk "Este veninos?")))
)

(defrule need-horns-rule 
   (need-horns ?)
   =>
   (assert (horns (validatedAsk "De obicei are coarne?")))
)

(defrule need-shell-rule 
   (need-shell ?) 
   =>
   (bind ?a (validatedAsk "Are carapace? "))
   (if (= ?a yes) then
      (assert (fish no)) 
      (assert (mam no)) 
      (assert (mars no)) 
   )
   (assert (shell ?a))
)

(defrule need-whiskers-rule 
   (need-whiskers ?) 
   =>
   (assert (whiskers (validatedAsk "Are mustati observabile? ")))
)

(defrule need-slithers-rule
   (need-slithers ?)
   =>
   (assert (slithers (validatedAsk "Aluneca (miscare laterala)?")))
)

(defrule inferNotEgg 
   (mam yes)
   (fourlegs no)
   =>
   (assert (egg no)) 
)
(animals) 
